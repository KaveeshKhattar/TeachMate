generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  firstName   String?
  lastName    String?
  imageUrl    String?
  clerkUserId String   @unique
  role        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Student     Student?
  Teacher     Teacher?
}

model Student {
  id                      Int            @id @default(autoincrement())
  userId                  Int            @unique
  grade                   String?
  school                  String?
  board                   String?
  fees                    Int?
  numberDaysAttendPerWeek Int?
  createdAt               DateTime       @default(now())
  updatedAt               DateTime       @updatedAt
  teacherId               Int // Removed @unique
  teacher                 Teacher        @relation(fields: [teacherId], references: [userId])
  user                    User           @relation(fields: [userId], references: [id])
  test_tuition            Test_Tuition[]
  test_school             Test_School[]
  schedule                Schedule[]
}

model Teacher {
  id           Int            @id @default(autoincrement())
  userId       Int            @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Student      Student[]
  user         User           @relation(fields: [userId], references: [id])
  test_tuition Test_Tuition[]
}

model Test_Tuition {
  id           Int      @id @default(autoincrement())
  name         String
  syllabus     String
  date         DateTime
  marks_scored Int
  total_marks  Int
  teacherId    Int
  studentId    Int

  teacher Teacher @relation(fields: [teacherId], references: [userId])
  student Student @relation(fields: [studentId], references: [userId])
}

model Test_School {
  id           Int      @id @default(autoincrement())
  name         String
  syllabus     String
  date         DateTime
  marks_scored Int
  total_marks  Int
  test_status  Boolean
  studentId    Int
  student      Student  @relation(fields: [studentId], references: [userId])
}

model Schedule {
  id        Int      @id @default(autoincrement())
  studentId Int
  day       Int
  slot      Int
  createdAt DateTime @default(now())
  student   Student  @relation(fields: [studentId], references: [id])
}

model Slot {
  id          Int    @id @default(autoincrement())
  day         Int
  slot_number Int
  start_time  String
  end_time    String
}
